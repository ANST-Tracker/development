name: deploy-prod

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  stop-old-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: stop old docker-compose if changed
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< "${{ secrets.SSH_KEY_PROD }}"
          ssh -o StrictHostKeyChecking=no -tt root@${{ secrets.HOST_IP_PROD }} << EOT
            cd deploy
            docker-compose down
            exit
          EOT

  inform-about-closing:
    needs: stop-old-cluster
    uses: ./.github/workflows/telegram-update.yml
    with:
      message: |
        Cluster: prod
        Status: stopped for redeploy
    secrets:
      tg_to: ${{ secrets.TG_ALLOKANIC_ID }}
      tg_token: ${{ secrets.TG_BOT_TOKEN }}

  redeploy:
    runs-on: ubuntu-latest
    needs: inform-about-closing
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: build deploy folder
        run: |
          mv secrets-prod.yaml secrets_profile.yaml
          mv ./secrets_profile.yaml ./deploy

      - name: transfer
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< "${{ secrets.SSH_KEY_PROD }}"
          rsync -e "ssh -o StrictHostKeyChecking=no" -rtvu ./deploy root@${{ secrets.HOST_IP_PROD }}:~/

      - name: restart
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< "${{ secrets.SSH_KEY_PROD }}"
          ssh -o StrictHostKeyChecking=no -tt root@${{ secrets.HOST_IP_PROD }} << EOT
            cd deploy
            echo ${{ secrets.VAULT_KEY_PROD }} > pass.txt
            ansible-vault decrypt --vault-password-file pass.txt secrets_profile.yaml
            rm ./pass.txt
            docker-compose down
            docker-compose up -d
            exit
          EOT

  inform-about-success:
    needs: redeploy
    uses: ./.github/workflows/telegram-update.yml
    with:
      message: |
        Cluster: prod
        Status: restart success
    secrets:
      tg_to: ${{ secrets.TG_ALLOKANIC_ID }}
      tg_token: ${{ secrets.TG_BOT_TOKEN }}

  inform-about-failure:
    needs: redeploy
    if: ${{ failure() && needs.redeploy.result == 'failure' }}
    uses: ./.github/workflows/telegram-update.yml
    with:
      message: |
        Cluster: prod
        Status: restart FAILED
    secrets:
      tg_to: ${{ secrets.TG_ALLOKANIC_ID }}
      tg_token: ${{ secrets.TG_BOT_TOKEN }}



